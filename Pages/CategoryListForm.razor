@page "/category/create"
@page "/category/edit/{Id:int}"
@inject ICategory _CategoryServ
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    <div class="col-10">
        @if(IsLoading)
        {
            <div class="text-center">
                    <img src="/images/loading.gif">
             </div>

        }else 
        {
            <EditForm model="Category" OnValidSubmit="FormSubmit">
                <DataAnnotationsValidator/>
                @* <ValidationSummary/> *@
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="category" class="btn btn-secondary">Back to Index</NavLink>
                </div>
            </EditForm>
        }
    </div>
 </div>

        @code {
            [Parameter]
            public int Id {get;set;}
            private CategoryDTO Category {get;set;} = new CategoryDTO();
            
            private string Title {get;set;} = "Create";

            public bool IsLoading {get;set;}
    
             protected override async Task OnAfterRenderAsync(bool firstRender)
            {
                if (firstRender)
                {
                    if (Id==0)
                    {
                        //create
                        IsLoading=false;
                    }
                    else
                    {
                        //update
                        Title="Update";
                        await LoadCategoryEdit();
                    }
                }
        
            }
        


            @* protected override async Task OnInitializedAsync()
            {
                if(Id==0)
                {
                    //create request
                    IsLoading=false;
                }else
                {
                    // update request
                     Title="Update";
                    await Task.Run(LoadCategoryEdit);
                }
                
                
            }
         *@
            @* private void LoadCategoryEdit()
            {
                IsLoading=true;
                StateHasChanged();
                Category = _CategoryServ.Get(Id);
                IsLoading=false;
                StateHasChanged();

            } *@
            private async Task LoadCategoryEdit()
            {
                IsLoading=true;
                StateHasChanged();
                Category = await _CategoryServ.Get(Id);
                IsLoading=false;
                StateHasChanged();

            }                 
            

            private async Task FormSubmit()
            {
                if (Category.Id==0)
                {
                    //create
                    await _CategoryServ.Create(Category);

                }else
                {
                   await _CategoryServ.Update(Category);
                }
                _navigationManager.NavigateTo("category");

            }

            @* private void FormSubmit()
            {
                if (Category.Id==0)
                {
                    //create
                    _CategoryServ.Create(Category);

                }else
                {
                    _CategoryServ.Update(Category);
                }
                _navigationManager.NavigateTo("category");

            } *@

        }
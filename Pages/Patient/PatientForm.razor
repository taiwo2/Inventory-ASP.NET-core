@page "/patients/create"
@page "/patient/{id}"
@inject NavigationManager _navigationManager
@inject IPatientServices _patientServices

<h3>Edit Patient</h3>

@* <div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3> *@

    @* <div class="col-10">
        @if(IsLoading)
        {
            <div class="text-center">
                    <img src="/images/loading.gif">
             </div>

        }else 
        {
            <EditForm model="Category" OnValidSubmit="FormSubmit">
                <DataAnnotationsValidator/>
                @* <ValidationSummary/> 
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="category" class="btn btn-secondary">Back to Index</NavLink>
                </div>
            </EditForm>
        }
    </div>
 </div>
@* @if (patient != null)
{
    <div class="form-group">
        <label for="name">Name:</label>
        <input id="name" class="form-control" @bind="@patient.Name" />
    </div>
    <div class="form-group">
        <label for="age">Age:</label>
        <input id="age" class="form-control" @bind="@patient.Age" />
    </div>
@* @onclick="UpdatePatient"  *@
    @* <button class="btn btn-primary"  >Save</button>
}
else
{
    <p>Patient not found.</p>
}  *@

@code {
    [Parameter]
    public int Id { get; set; }
   
    public bool IsLoading {get;set;}
    private Patient patient {get;set;}
@* 
    protected override  void OnInitialized()
    {
        patient = _patientServices.GetPatientById(Id);
    }

    private void  UpdatePatient()
    {
         _patientServices.UpdatePatient(patient.Id, patient);
        _navigationManager.NavigateTo("/patients");
    }  *@

    private async Task FormSubmit()
            {
                if (Category.Id==0)
                {
                    //create
                    await _CategoryServ.Create(Category);

                }else
                {
                   await _CategoryServ.Update(Category);
                }
                _navigationManager.NavigateTo("category");

            }
}
